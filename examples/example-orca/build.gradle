plugins {
    id 'application' // Provide convenience executables for trying out the examples.
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.17'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
    id 'java'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.54.0' // CURRENT_GRPC_VERSION
def protocVersion = '3.21.7'

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-xds:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

task CustomBackendMetricsClient(type: CreateStartScripts) {
    mainClass = 'io.grpc.examples.orca.CustomBackendMetricsClient'
    applicationName = 'custom-backend-metrics-client'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task CustomBackendMetricsServer(type: CreateStartScripts) {
    mainClass = 'io.grpc.examples.orca.CustomBackendMetricsServer'
    applicationName = 'custom-backend-metrics-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(CustomBackendMetricsClient)
    from(CustomBackendMetricsServer)
    fileMode = 0755
}
